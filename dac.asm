;Design and develop an assembly language program to 
;Generate the Sine/Half rectified sine/square Wave using DAC interface (The output of the DAC is to be displayed on the CRO). 
DATA SEGMENT
        PORTA EQU 0E880H			; 8255 PORT A PORT# E880H GIVEN THE NAME PORTA
        CR EQU 0E883H				; 8255 CONTROL WORD ADDRESS E883H GIVEN THE NAME CR
        TABLE  DB 128, 143, 158, 173, 188, 203, 218, 233, 248, 255	;TABLE OF VALUES CORRESPONDING TO SINE WAVE
                     DB  255, 248, 233, 218, 203, 188, 173, 158, 143, 128  ;VALUES OBTAINED BY EQUATION [128*(1+SIN(X))]
                        DB 128, 113, 98, 83, 68, 53, 38, 23, 08, 00		;ANGLE STEPPING DEPENDS ON NUMBER OF SAMPLES. HERE 40
                        DB 00, 08, 23, 38, 53, 68, 83, 98, 113, 128		;THUS 360/40=9 DEGREE. THUS X=9,18,27,36…….351
              
         ; TABLE DB 128, 143, 158, 173, 188, 203, 218, 233, 248, 255	;USE THIS TABLE FOR HALF RECTIFIED SINE WAVE
           ;            DB 255, 248, 233, 218, 203, 188, 173, 158, 143, 128      
           ;              DB 128, 128, 128, 128, 128, 128, 128, 128, 128, 128
           ;              DB 128, 128, 128, 128, 128, 128, 128, 128, 128, 128
           ; TABLE DB 128, 143, 158, 173, 188, 203, 218, 233, 248, 255	;USE THIS TABLE FOR FULL RECTIFIED SINE WAVE
           ;            DB 255, 248, 233, 218, 203, 188, 173, 158, 143, 128      
           ;              DB 128, 143, 158, 173, 188, 203, 218, 233, 248, 255
           ;              DB 255, 248, 233, 218, 203, 188, 173, 158, 143, 128      
            ; TABLE DB 128, 128, 128, 128, 128, 128, 128, 128, 128, 128	;USE THIS TABLE FOR SQUARE WAVE
           ;            DB 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
           ;              DB 128, 128, 128, 128, 128, 128, 128, 128, 128, 128
           ;              DB 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
MSG DB	‘PRESS ANY KEY TO EXIT$'			;MESSAGE DISPLAY
DATA ENDS

ASSUME CS:CODE,DS:DATA

CODE SEGMENT
        START: MOV AX,DATA
                  MOV DS,AX
                  MOV AL,80H	;80H IS COPIED TO AL TO LOAD INTO CR FOR SETTING PORT A,B & C AS OUTPUT PORTS
                  MOV DX,CR	; PORT ADDRESS IS 16 BIT, THEREFORE DX IS USED TO HOLD IT FOR IN & OUT
                  OUT DX,AL	;8 BIT DATA IN AL IS SENT TO CR WHOSE 16-BIT ADDRESS IS IN DX.
                  LEA DX,MSG	;INTERRUPT FOR MESSAGE DISPLAY
                  MOV AH,09H
                  INT 21H
        AGAIN:MOV CX,28H	;LOAD NUMBER OF SAMPLES AS COUNT I.E 40 =28H
                  LEA SI,TABLE	;SET SI TO POINT AT START OF TABLE OF VALUES
          BACK:MOV AL,[SI]	;COPY THE VALUE POINTED AT BY SI INTO AL
                  MOV DX,PORTA	;SEND THAT VALUE TO OUTPUT PORT A
                  OUT DX,AL
                  CALL DELAY	;CALL DELAY PROCEDURE TO GENERATE A DELAY BETWEEN SENDING SUCCESSIVE SAMPLE TO PORT A
                  INC SI		;INCREMENT POINTER SI TO POINT AT NEXT LOCATION
                  LOOP BACK	;REPEAT LOOP UNTIL ALL 40 SAMPLE VALUES ARE SENT TO PORT A. OUTPUT SEEN IN CRO
                  MOV AH, 01H	;INTERRPUT TO DETECT KEYPRESS. THE INTERRUPT SETS ZERO FLAG BY DEFAULT. IF USER PRESSES
                  INT 16H		;A KEY ON THE KEYBOARD ZERO FLAG IS CLEARED. THIS LOGIC IS USED TO REPEAT LOOP UNTIL KEY PRESS.
                  JZ AGAIN
                  MOV AH,4CH	;INTERRUPT TO EXIT PROGRAM
                  INT 21H
DELAY PROC 		;PROCEDURE FOR DELAY
         MOV BX,0FFFFH
     L1:DEC BX
        JNZ L1    
        RET
DELAY ENDP
CODE ENDS
END START
