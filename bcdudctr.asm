;A. Design and develop an assembly program to demonstrate BCD Up-Down Counter (00-99) on the Logic Controller Interface. 
DATA SEGMENT
            PORTA EQU 0E880H 	;8255 PORT A PORT# E880H GIVEN THE NAME PORTA
            CR EQU 0E883H	;8255 CONTROL WORD ADDRESS E883H GIVEN THE NAME CR
DATA ENDS

ASSUME CS:CODE,DS:DATA

CODE SEGMENT
            START:MOV AX,DATA
            MOV DS,AX
            MOV AL,80H		;80H IS COPIED TO AL TO LOAD INTO CR FOR SETTING PORT A, B & C AS OUTPUT PORTS
            MOV DX,CR	                  ;PORT ADDRESS IS 16 BIT, THEREFORE DX IS USED TO HOLD IT FOR IN & OUT
            OUT DX,AL		;8 BIT DATA IN AL IS SENT TO CR WHOSE 16-BIT ADDRESS IS IN DX.
            MOV AL,00H		;INITIAL COUNT OF UNP COUNTER 0 IS LOADED INTO AL
            MOV DX,PORTA	;SEND THE DATA VALUE 0 INTO OUTPUT PORT A.
      UP:OUT DX,AL		;NOTE THAT IN & OUT WORKS WITH AL & DX REGISTERS ONLY
            CALL DELAY	;CALL DELAY PROCEDURE TO HAVE A DELAY BETWEEN TWO SUCCESSIVE COUNTS
            INC AL		;INCREMENT THE COUNT OF DATA IN AL BY 1
            CMP AL,99H		;CHECK IF THE COUNT IN AL HAS REACHED 99H
            JBE UP		;IF COUNT IN AL IS LESS THAN OR EQUAL TO 99H REPEAT JUMP TO UP& REPEAT TASK.
            MOV AL,99H		;IF COUNT IS GREATER THAN 99H BREAK OUT OF THE LOOP 
            MOV DX,PORTA	;SET INITIAL COUNT  OF DOWN COUNTER I.E 99H TO PORT A
DOWN:OUT DX,AL		;SEND THE COUNT IN AL TO PORT ADDRESSED BY DX I.E PORT A
            CALL DELAY	;CALL DELAY TO HAVE A DELAY BETWEEN SUCCESSIEV COUNTS
            DEC AL		;DECREMENT COUNT IN AL BY 1. 
            CMP AL,0FFH	; CHECK IF IT IS EQUAL TO FFH (-1 IN SIGNED NUMBER) NOTE THAT GREATER THAN 0 
            JNE DOWN		; CONDITION IS NOT CHECKED BECAUSE 0-1 WILL GIVE FFH WHICH IS -1 BUT FOR THE 
            MOV AH,4CH	; PROCESSOR FFH  IS GREATER THAN 0
            INT 21H		;INTERRUPT TO EXIT THE CODE
DELAY PROC		;PROCEDURE FOR DELAY
            MOV BX,0F000H	;LOAD BX WITH A SUITABLE VALUE
      L1:MOV CX,0FFFFH	;LOAD CX WITH A SUITABLE VALUE
      L2:LOOP L2		;REPEAT INNER LOOP IF CX IS NOT 0
            DEC BX		;DECREMENT BX. CHECK IF IT IS 0. IF NOT REPEAT OUTER LOOP
            JNZ L1
            RET
DELAY ENDP
CODE ENDS
END START
